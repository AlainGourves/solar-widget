@use 'sass:math'; // for math.div() (division with '/' is deprecated in SCSS)
@use 'sass:color';

:root {
    --time-slider__output: ;
}

.solar-widget__wrap {
    margin-block-end: 6rem;
}

// Slider -------------------------\
$track-w: 100%;
$track-h: .25em;
$thumb-d: 1em;
$track-c: #555;
$progr-c: #f9c50b;

@mixin track() {
    box-sizing: border-box;
    border: none;
    width: $track-w;
    height: $track-h;
    background: $track-c;
    background-image: linear-gradient(90deg, $progr-c, $progr-c);
    background-size: calc(var(--time-slider__output, 0) * 1%) $track-h; // explicit height: bug in Safari otherwise
    background-repeat: repeat-y;
}

@mixin thumb() {
    box-sizing: border-box;
    border: none;
    width: $thumb-d;
    height: $thumb-d;
    border-radius: 50%;
    background: $progr-c;
}


[type='range'] {

    &,
    &::-webkit-slider-thumb {
        appearance: none;
        -webkit-appearance: none;
    }

    flex: 1;
    margin: 0;
    padding: 0;
    min-height: $thumb-d;
    background: transparent;
    font: inherit;

    &::-webkit-slider-runnable-track {
        @include track()
    }

    &::-moz-range-track {
        @include track
    }

    &::-ms-track {
        @include track
    }

    &::-webkit-slider-thumb {
        margin-top: .5*($track-h - $thumb-d);
        @include thumb
    }

    &::-moz-range-thumb {
        @include thumb
    }

    &::-ms-thumb {
        margin-top: 0;
        @include thumb
    }

    &::-ms-tooltip {
        display: none
    }
}

// Slider (end) --------------------/

.controls {
    --shadow-factor: 0;
    position: fixed;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: clamp(300px, 50vw, 100% - 2rem);
    margin: 1rem auto 0;
    padding: 1rem;
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: center;
    gap: 1rem;
    background-color: #787878;
    border-radius: 1rem 1rem 0 0;
    opacity: 0;
    transition: opacity .5s linear;

    &>div {
        display: flex;
        align-items: center;

        &:first-of-type {
            width: clamp(11rem, 100%, 22rem);
            padding: .5rem 1rem;
        }

        &:last-of-type {
            width: 5rem;
            justify-content: center;
        }
    }

    & [type=range] {
        &:hover {
            cursor: pointer;

            &~span {
                --shadow-factor: 1;
            }
        }
    }


    & label {
        --tick-color: #bbb;
        --tick-width: 2px;
        --output-bg: rgb(255, 20, 145);
        position: relative;
        width: 100%;
        padding-block: 1.5rem;
        background: linear-gradient(to right,
            transparent calc(#{math.div($thumb-d, 2)} - 1px),
            var(--tick-color) calc((#{math.div($thumb-d, 2)} - 1px) + var(--tick-width)),
            transparent 0,
            transparent calc(100% - (#{math.div($thumb-d, 2)} + 1px)),
            var(--tick-color) calc(100% - (#{math.div($thumb-d, 2)} + 1px) + var(--tick-width)),
            transparent 0) top 1.25rem center / 100% .5em no-repeat;

        &::before,
        &::after {
            position: absolute;
            top: 0;
            height: 1.5rem;
            width: max-content;
            color: var(--tick-color);
            font-size: .75rem;
        }

        &::before {
            content: '00:00';
            left: 0;
            transform: translateX(calc(-50% + #{math.div($thumb-d, 2)}));
        }

        &::after {
            content: '23:59';
            right: 0;
            transform: translateX(calc(50% - #{math.div($thumb-d, 2)}));
        }
    }

    & [type=range] {
        width: 100%;
    }

    & span {
        // No rounded outline in Safari -> position this <span> above the thumb to fake it
        display: block;
        position: absolute;
        @include thumb;
        background-color: transparent;
        top: calc(1.5rem + 2.5px);
        left: calc(var(--time-slider__output)*1% + (((50 - var(--time-slider__output))/100) * #{$thumb-d}));
        transform: translateX(-50%);
        pointer-events: none;
        box-shadow: 0 0 0 calc(var(--shadow-factor) * 8px) color.scale($progr-c, $alpha: -75%);
        mix-blend-mode: screen;
        transition: box-shadow .25s linear;
    }


    & output {
        position: absolute;
        width: 5ch;
        height: 1.5rem;
        display: grid;
        place-content: center;
        padding: .25rem .5rem;
        bottom: 0;
        left: calc(var(--time-slider__output)*1% + (((50 - var(--time-slider__output))/100) * #{$thumb-d}));
        transform: translateX(-50%);
        background-color: var(--output-bg);
        border-radius: .25rem;
        color: #fff;

        &::before {
            // conic gradient for the arrow
            --theta: 45deg;
            position: absolute;
            content: '';
            width: 100%;
            height: 50%;
            background-image: conic-gradient(from calc(180deg - var(--theta)) at 50% 0, var(--output-bg) calc(var(--theta) * 2), transparent 0);
            z-index: -1;
            top: -.25rem;
        }
    }

    & button {
        width: 3.5rem;
        height: 3.5rem;
        border-radius: 50%;
        appearance: none;
        font-size: 1rem;
        text-transform: uppercase;
        border: none;
        color: #fff;
        background: #555;
        cursor: pointer;
    }
}